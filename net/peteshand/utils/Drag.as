package net.peteshand.utils{	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Stage;		import flash.events.EventDispatcher;	public class Drag extends MovieClip	{		public var returnArray:Array = new Array();		public var Dragging:Boolean = false;				private var dragX:Boolean = true;		private var dragY:Boolean		private var thisNum:int;		private var dragginScroll:Boolean = false;				private var clickLocX:Number;		private var mouseLocX:Number;		private var clickLocY:Number;		private var mouseLocY:Number;				private var newScrollLocX:Number = 0;		private var newScrollLocY:Number = 0;				private var minX:int = -1000000;		private var maxX:int = 1000000;		private var minY:int = -1000000;		private var maxY:int = 1000000;				private var dragClip:MovieClip				public function Drag():void		{					}				// called when the drag starts.		/** @private **/		protected function StartDrag():void 		{			dispatchEvent(new Event(Event.INIT));		}		// called when the drag ends.		/** @private **/		protected function endDrag():void 		{			trace(returnArray[1]);			dispatchEvent(new Event(Event.COMPLETE));		}		// called when the drag changes.		/** @private **/		protected function changeDrag():void 		{			dispatchEvent(new Event(Event.CHANGE));		}		public function setDrag(locX:Number=-1, locY:Number=-1):void		{			if (locX!=-1) {				dragClip.x = minX + (locX * (maxX - minX));				returnArray[0] = locX;			}			if (locY!=-1) {				dragClip.y = minY + (locY * (maxY - minY));				returnArray[1] = locY;			}			changeDrag();		}		public function DragBetween(_dragClip:MovieClip, _minX:int = 0, _maxX:int = 0, _minY:int = 0, _maxY:int = 0):void		{			minX = _minX;			maxX = _maxX;			minY = _minY;			maxY = _maxY;			dragClip = _dragClip;						dragX = true;			if (minX == maxX){ dragX = false }			dragY = true;			if (minY == maxY){ dragY = false }						dragginScroll = false;			newScrollLocX = 0;			newScrollLocY = 0;						returnArray[0] = 0;			returnArray[1] = 0;						CharText();		}		public function DragFree(_dragClip:MovieClip, _dragX:Boolean=true, _dragY:Boolean=true):void		{			dragClip = _dragClip;						dragX = _dragX;			dragY = _dragY;						dragginScroll = false;			newScrollLocX = 0;			newScrollLocY = 0;						returnArray[0] = 0;			returnArray[1] = 0;						CharText();		}						private function CharText():void		{			dragClip.buttonMode = true;			dragClip.addEventListener(MouseEvent.MOUSE_DOWN, pressScroll);		}		private function pressScroll(evt:MouseEvent):void		{			Dragging = true;						StartDrag();						clickLocX = dragClip.x;			mouseLocX = MovieClip(dragClip.root).mouseX;						clickLocY = dragClip.y;			mouseLocY = MovieClip(dragClip.root).mouseY;						addEventListener(Event.ENTER_FRAME, dragScroll);						dragClip.stage.addEventListener(MouseEvent.MOUSE_UP, releaseScroll);			dragClip.removeEventListener(MouseEvent.MOUSE_DOWN, pressScroll);		}		private function releaseScroll(evt:MouseEvent):void		{			Dragging = false;			endDrag();			removeEventListener(Event.ENTER_FRAME, dragScroll);			dragClip.addEventListener(MouseEvent.MOUSE_DOWN, pressScroll);			dragClip.stage.removeEventListener(MouseEvent.MOUSE_UP, releaseScroll);		}		private function dragScroll(evt:Event=null):void		{			if (dragX){				var newLocX:Number = clickLocX + MovieClip(dragClip.root).mouseX - mouseLocX;				if (newLocX < minX){ newLocX = minX; }				if (newLocX > maxX){ newLocX = maxX; }				dragClip.x = newLocX;				newScrollLocX = (dragClip.x - minX) / maxX;			}						if (dragY){				var newLocY:Number = clickLocY + MovieClip(dragClip.root).mouseY - mouseLocY;				if (newLocY < minY){ newLocY = minY; }				if (newLocY > maxY){ newLocY = maxY; }				dragClip.y = newLocY;				newScrollLocY = (dragClip.y - minY) / (maxY - minY);			}						returnArray[0] = newScrollLocX;			returnArray[1] = newScrollLocY;			changeDrag();		}						public function get getNewLoc():Array		{			return returnArray;		}		override public function get y():Number		{			var returnVal:Number = 0;			if (dragClip != null) returnVal = dragClip.y;			return returnVal;		}		override public function set y(v:Number):void		{			var newLocY:Number = v;			if (newLocY < minY) newLocY = minY;			if (newLocY > maxY) newLocY = maxY;			dragClip.y = newLocY;			newScrollLocY = (dragClip.y - minY) / (maxY - minY);			returnArray[1] = newScrollLocY;			changeDrag();		}				public function get py():Number		{			return returnArray[1];		}		public function set py(v:Number):void		{			if (v < 0) v = 0;			if (v > 1) v = 1;			setDrag(-1, v);		}	}}