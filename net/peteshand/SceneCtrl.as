package net.peteshand{	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.LoaderInfo;		import seo.SWFAddress;	import seo.SWFAddressEvent;		public class SceneCtrl extends MovieClip	{		private var allScenes:Array = new Array();		private var address:String;		private var CurrentScene:String = "-";		private var lastScene:String = "-";		private var CurrentSubScene:String = "-";		private var lastSubScene:String = "-";		private var URLTracking:Array = new Array();		private var splitAddress:Array = new Array();		private var Scenes:Array = new Array();		private var NavBack:Boolean = false;				public function SceneCtrl():void		{			SWFAddress.addEventListener(SWFAddressEvent.CHANGE, handleSWFAddress);		}				public function init():void		{			//retreiveFlashVars();		}						public function set URL(newURL:String):void		{			SWFAddress.setValue(newURL);		}		public function handleSWFAddress(event:SWFAddressEvent):void		{			address = SWFAddress.getValue();						splitAddress = address.split('/');						//HideScene();			ShowScene();		}				private function ShowScene():void		{			if (CurrentScene != splitAddress[1]){				SceneChange();			}			else {				SubSceneChange();			}		}		private function SceneChange():void		{			lastScene = CurrentScene;			CurrentScene = splitAddress[1];							trace("CurrentScene = " + CurrentScene);						URLTracking.push(CurrentScene);						//var EventName:String = "NewScene_" + CurrentScene;			//trace("EventName = " + EventName);			//trace("dispatchEvent " + EventName);			//dispatchEvent(new Event(EventName));			dispatchEvent(new Event("NewScene"));		}		public function fireSceneEvent():void		{			trace("CurrentScene = " + CurrentScene);			dispatchEvent(new Event("NewScene"));		}		private function SubSceneChange():void		{					}					public function get Scene():String		{			return CurrentScene;		}		public function get LastScene():String		{			return lastScene;		}		public function get SubScene():String		{			return CurrentSubScene;		}				/*public function addScenes(_Scenes:Array):void		{			Scenes = _Scenes;			for (var i:int = 0; i < Scenes.length; i++){				Scenes[i].addEventListener("HideComplete", HideComplete);				var sceneNames:Array = Scenes[i].sceneNames;				for (var s:int = 0; s < sceneNames.length; s++){					allScenes.push(sceneNames[s]);				}			}		}*/		public function goBack(iBack:int=1):void		{			NavBack = true;			if (URLTracking[URLTracking.length-iBack] == Scene){				goBack(iBack+1);			}			else {				URL = URLTracking[URLTracking.length-iBack];			}		}	}}