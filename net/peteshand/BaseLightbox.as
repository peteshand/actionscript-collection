package net.peteshand{	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.events.IOErrorEvent;	import flash.text.TextFieldAutoSize;		import com.gskinner.motion.GTween;	import gs.easing.*;		import net.peteshand.utils.Dimensions;		import flash.filters.DropShadowFilter;		public class BaseLightbox extends MovieClip	{		private var dimensions:Dimensions;		private var loader:Loader;				private var bg:MovieClip;		private var borderMc:MovieClip;				private var fadeTween:GTween;				public var padding:int = 40;		public var border:int = 10;				private var mc_close:Close;				private var DropShadow:DropShadowFilter;				public function BaseLightbox():void		{			dimensions = new Dimensions();						this.alpha = 0;			this.visible = false;			addEventListener(Event.ADDED_TO_STAGE, OnAddToStage);						DropShadow = new DropShadowFilter(0,0,0x000000,0.6,20,20,1,2,true);		}				public function OnAddToStage(event:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, OnAddToStage);						bg = new MovieClip();			bg.graphics.beginFill(0x000000, 0.8);			bg.graphics.drawRect(0,0,stage.stageWidth,stage.stageHeight);			bg.graphics.endFill();			addChild(bg);						borderMc = new MovieClip();			borderMc.graphics.beginFill(0xFFFFFF);			borderMc.graphics.drawRect(0,0,1,1);			borderMc.graphics.endFill();			addChild(borderMc);						mc_close = new Close();			mc_close.visible = false;			mc_close.buttonMode = true;			mc_close.addEventListener(MouseEvent.CLICK, clickBg);			addChild(mc_close);						bg.buttonMode = true;			bg.addEventListener(MouseEvent.CLICK, clickBg);						stage.addEventListener(Event.RESIZE, OnResize);		}		public function loadImage(url:String):void		{						if (loader != null){				removeChild(loader);				loader = null;			}						var request:URLRequest = new URLRequest(url);			loader = new Loader();			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadComplete);			loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadError);			loader.load(request);			function loadComplete(event:Event):void			{				addChildAt(loader, 2);				loader.filters = [DropShadow];				OnResize(null);			}			function loadError(event:Event):void			{				trace("error loading event image");			}		}				private function clickBg(event:MouseEvent):void		{			Hide();		}		private function OnResize(event:Event):void		{			bg.width = stage.stageWidth;			bg.height = stage.stageHeight;						if (loader != null){				dimensions.Calculator("normal", stage.stageWidth-(padding*2), stage.stageHeight-(padding*2), loader.width, loader.height);				loader.x = padding + dimensions.x;				loader.y = padding + dimensions.y;				loader.width = dimensions.width;				loader.height = dimensions.height;								borderMc.x = padding + dimensions.x - border;				borderMc.y = padding + dimensions.y - border;				borderMc.width = dimensions.width + (border*2);				borderMc.height = dimensions.height + (border*2);								mc_close.visible = true;				mc_close.x = borderMc.x + borderMc.width - (border/2);				mc_close.y = borderMc.y + (border/2);			}		}		public function Show():void		{			this.visible = true;			fadeTween = new GTween(this, 0.5, {alpha:1}, {ease:Linear.easeNone, delay:0});		}		public function Hide():void		{			fadeTween = new GTween(this, 0.3, {alpha:0}, {ease:Linear.easeNone, delay:0});			fadeTween.addEventListener(Event.COMPLETE, OnComplete);			function OnComplete(event:Event):void			{				this.visible = false;			}		}	}}